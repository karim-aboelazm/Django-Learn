Django Class-based views
-----------------------------
1) TemplateView
    -> Display Template with context data
    ```
    class CLASS_NAME(TemplateView):
        template_name="page.html"
        def get_context_data(self, **kwargs):
            context = super().get_context_data(**kwargs)
            context["time"] = datetime.now() 
            context["title"] = "" 
            context["new_data"] = "" 
            return context
    ```
    ```
    path('',CLASS_NAME.as_view(),name="home")
    ```
-----------------------------
2) ListView
    -> Display List Of Objects from Database
    ```
    class CLASS_NAME(ListView):
        model = TableName
        template_name="page.html"
        context_object_name = "persons"
    ```
    ```
    path('url/',CLASS_NAME.as_view(),name="name")
    ```
-----------------------------
3) DetailView
    -> display details for one object 
    ```
    class CLASS_NAME(DetailView):
        model = TableName
        template_name="page.html"
        context_object_name = "object"
    ```
    ```
    path('url/<int:pk>',CLASS_NAME.as_view(),name="name")
    ```
-----------------------------
4) CreateView
    -> form to add into database 
    ```
    class CLASS_NAME(CreateView):
        model = TableName
        fields = ["title","content"]
        template_name="page.html"
        success_url = "newpath"
    ```
    ```
    path('url',CLASS_NAME.as_view(),name="name")
    ```
-----------------------------
5) UpdateView
    -> Edit details for one object
    ```
    class CLASS_NAME(UpdateView):
        model = TableName
        fields = ["title","content"]
        template_name="page.html"
        success_url = "newpath"
    ```
    ```
    path('url/<int:pk>',CLASS_NAME.as_view(),name="name")
    ```
-----------------------------
6) DeleteView
    -> delete an object from database
    ```
    class CLASS_NAME(DeleteView):
        model = TableName
        template_name="page.html"
        success_url = "newpath"
    ```
    ```
    path('url/<int:pk>',CLASS_NAME.as_view(),name="name")
    ```

---------------------------------------------------------
---------------------------------------------------------

Django Models Fields 
----------------------------
01) CharField
    -> String with limit size 
    -> max_length = 200
    -> choice = choice_data  --> default = "test"
    -> verbose_name = name
----------------------------
02) IntegerField
    -> integer number 
    -> [-9:9]
    -> default = 0
----------------------------
03) PositiveIntegerField
    -> integer number 
    -> [0:9]
    -> default = 0
----------------------------
04) SmallIntegerField
    -> integer number 
    -> [-9:9]
    -> default = 0
----------------------------
05) BigIntegerField
    -> integer number 
    -> [-9:9]
    -> default = 0
----------------------------
06) FloatField
    -> Float number  
    -> [-9.9:9.9]  
    -> default = 0
----------------------------
07) DecimalField
    -> Float number  
    -> [-9.9:9.9]
    -> default = 0
    -> max_digits = <nmbers before point> 
    -> decimal_places = <nmbers after point> 
----------------------------
08) BooleanField
    -> True , False 
    -> checkbox
    -> default = True , False
----------------------------
09) DateField
    -> Date
----------------------------
10) TimeField
    -> Time
----------------------------
11) DateTimeField
    -> Date, Time
    -> auto_now_add = True
----------------------------
12) ImageField
    -> images --> media
    -> upload_to = "posts/"
----------------------------
13) TextField
    -> Large String
----------------------------
14) EmailField
    -> Email 
----------------------------
15) FileField
    -> Files(PDF,Video, audio ,....) --> media
    -> upload_to = "posts/"
----------------------------
16) OneToOneField
    -> Model
    -> on_delete=models.SET_NULL
    -> on_delete=models.CASCADE
----------------------------
17) ForignKey
    -> Model
    -> on_delete=models.SET_NULL
    -> on_delete=models.CASCADE
----------------------------
18) ManyToManyField
    -> Model
    -> on_delete=models.SET_NULL
    -> on_delete=models.CASCADE
----------------------------
19) SlugifyField
----------------------------
null = True 
blank = True
---------------------------------------------------------
---------------------------------------------------------
Django Model Create 
--------------------------
models.py

Table -> Class (models.Model)

class Customers(models.Model):
    GENDER = (
        ("male","male"),
        ("female","female"),
    )
    name    = models.CharField(max_length = 200)
    age     = models.SmallPositiveIntegerField()
    image   = models.ImageField(upload_to = "customers/")
    gender  = models.CharField(max_length = 200,choise = GENDER, default="male")
    email   = models.EmailField()
    join_at = models.DateTimeField(auto_add=True)

    #-----> meta
    class Meta:
        verbose_name_plural = ""
    #-----> str
    def __str__(self):
        return f"user wiht full name : {self.name}"

--> To Display Table in Admin Panal
go to admin.py and 
admin.site.register(table_name)

